@using ProductDemoApplication.Models
@model ProductDemoApplication.Models.PurchaseTransaction

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

    function FillProduct() {
        $("#txtRate").val("");
        var ProdId = $("#ProductCat").val();
        $.ajax({
            url: '/PurchaseTransaction/FillProduct',
            type: "POST",
            dataType: "JSON",
            data: { Product: ProdId },
            success: function (categories) {
                $("#Product").html("");
                $.each(categories, function (i, category) {
                    $("#Product").append(
                        $('<option></option').val(category.Id).html(category.Name));

                });
            }
        });
    }

    function FillText() {
        var ProdCatId = $("#Product").val();

        $.ajax({
            url: '/PurchaseTransaction/FillText',
            type: "POST",
            datatype: "JSON",
            data: { prodctCat: ProdCatId },
            success: function (products) {

                $("#txtRate").html("");
                $.each(products, function (i, product) {
                    $("#txtRate").val(product.Rate);
                });

            }
        });
    }

    function addProduct() {
        @{
                Model.PurchaseTransactionDetails.Add(new PurchaseTransactionDetail());
         }
      
        var index = $("#tbProducts").children("tr").length;
       
        var ProductIdvalue = $("#Product option:selected").val();
        var ProductRate = $("#txtRate").val();
        var ProductQuantity = $("#txtQuantity").val();
        var ProductNameValue = $("#Product option:selected").text();

        var indexCell = "<td style='display:none'><input name='PurchaseTransactionDetails.Index'  type='hidden' value='" + index + "' /></td>";       
        var index = $("#tbProducts").children("tr").length;    

        var ProductIdvalue = "<td><input id='txtProduct__" + index + "__ProductName'  name='PurchaseTransactionDetails[" + index + "].ProductId' type='text' value='" + ProductIdvalue + "' /></td>";
        var ProductNameValue = "<td><input id='txtProduct__" + index + "__ProductName'  name='PurchaseTransactionDetails[" + index + "].ProductId' type='text' value='" + ProductNameValue + "' /></td>";

        var RateCell = "<td><input id='txtRate_" + index + "__RateCell' name='PurchaseTransactionDetails[" + index + "].Rate' type='text' value='" + ProductRate + "' /></td>";       
        var QuantityCell = "<td><input id='txtQuantity_" + index + "__QuantityCell' name='PurchaseTransactionDetails[" + index + "].Quantity' type='text' value='" + ProductQuantity + "' /></td>";
        var newRow = "<tr id='trProduct" + index + "'>" + indexCell + ProductIdvalue + ProductNameValue + RateCell + QuantityCell + "</tr>";
      
        $("#tbProducts").append(newRow);
      
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PurchaseTransaction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerName", null, "---Select Customer---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.customerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductCategoryName", null, "---Select Product Category---", htmlAttributes: new { @class = "form-control", @onchange = "FillProduct()", @Id = "ProductCat" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("ProductName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("ProductId", new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Name"), "---Select Product---", htmlAttributes: new { @class = "form-control", @Id = "Product", @onchange = "FillText()" })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rate", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Rate", new { htmlAttributes = new { @class = "form-control", @Id = "txtRate" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Quantity", new { htmlAttributes = new { @class = "form-control" ,@Id="txtQuantity"} })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                <input id="btnAddProduct" type="button" onclick="addProduct();" value="Add Product" class="btn btn-success" />
            </div>
        </div>

    </div>

    <table>
        <thead>
            <tr>      
                <td>
                    Product Id
                </td>      
                <td>
                    Product Name
                </td>
                <td>
                    Rate
                </td>
                <td>
                    Quantity
                </td>
            </tr>
        </thead>
        <tbody id="tbProducts"></tbody>
    </table>
    <p>
        <input type="submit" value="Save" class="btn btn-default" />
    </p>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
